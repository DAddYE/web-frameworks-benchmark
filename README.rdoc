== Why?

Right after announcing Padrino, many developers began to request benchmarks to give them a better understanding of how our framework compared in terms of performance with the existing ruby web frameworks.

Personally, no one on our team is a big fan of benchmarks since they can often be misleading and real world usage is generally quite different. However, we thought that providing a set of simple benchmarking results would help people get at least a basic sense of Padrino’s speed.

== How ?

For our benchmarks, we chose to test three different sample applications (three branches).

text_render branch:: was a bare minimum app as a baseline where a response is just rendered with a short inline string.
template_render branch:: is a simple app where we render a small template.
more_advanced branch:: was the most comprehensive with a more ‘full-stack’ application including sessions, haml, layouts, templates, flash, and helpers... aka a real world usage.

== Apps

It's very difficult test/bench different framework for a lot of reasons (for example camping at the moment use Markaby).

Apps with versions:

* Rack 1.1.0
* Merb 1.1.0
* Padrino 0.9.10
* Sinatra 1.0.0
* Rails 3.beta3
* Ramaze 2010.04.04

== Enviroment

We run these tests on

Model Name::	MacBook Pro
Model Identifier::	MacBookPro5,1
Processor Name::	Intel Core 2 Duo
Processor Speed::	2,4 GHz
Number Of Processors::	1
Total Number Of Cores::	2
L2 Cache::	3 MB
Memory::	4 GB
Bus Speed::	1,07 GHz

with ruby 1.8.7 (2010-01-10 patchlevel 249) [i686-darwin10.2.0]

== Acknowledgement

Running benches can give different results this due to the fact that your system can be busy for some background process. Padrino/Merb/Sinatra has similar performances so maybe in some test Padrino will be fast in others Merb and in others Sinatra. Be sure to run it 5/6 times then pickup the most repetitive result.