== Why?

Right after announcing Padrino, many developers began to request benchmarks in order give them a better understanding of how our framework compared in terms of performance with the existing ruby web frameworks.

Personally, no one on our team is a big fan of benchmarks since they can often be misleading and real world usage is generally quite different. However, we decided that providing a set of reasonable benchmarking results would help people get at least a general sense of Padrino’s speed in relation to other popular alternatives.

== How?

Within our benchmarks, we opted to test three different sample applications (three repo branches):

text_render:: a bare minimum app serves as a baseline where the response is just rendering a quick inline string.
template_render:: a simple app where the response is serving a small 'view' template.
more_advanced:: the most comprehensive test of a ‘full-stack’ application including sessions, haml, layouts, templates, flash, and helpers... aka a real world usage.

== Apps

It can be very difficult accurately benchmark different frameworks for a number of reasons. For example, the camping apps at the moment use Markaby due to a framework limitation. 

In other cases, we had to make decisions on how to create 'fair' equivalent apps within all three frameworks. If anybody has any suggestions on how to improve the accuracy of these benchmarks, please do let us know or fork the project!

Application frameworks tested in benchmarks:

* Rack 1.1.0
* Merb 1.1.0
* Padrino 0.9.10
* Sinatra 1.0.0
* Rails 3.beta3
* Ramaze 2010.04.04
* Camping 2.0.0

== Environment

These benchmarks were executed on the following machine:

Model Name::	MacBook Pro
Model Identifier::	MacBookPro5.1
Processor Name::	Intel Core 2 Duo
Processor Speed::	2.4 GHz
Number Of Processors::	1
Total Number Of Cores::	2
L2 Cache::	3 MB
Memory::	4 GB
Bus Speed::	1,07 GHz

with ruby 1.8.7 (2010-01-10 patchlevel 249) [i686-darwin10.2.0]

== Acknowledgements

Running benches can give quite different results on different machines. This can be primarily due to the fact that your system can be busy with other background processes during execution. 
Padrino/Merb/Sinatra all have similar performance in practice. This means that in some tests Padrino might run faster yet in others Merb or Sinatra might appear faster. Be sure to run the benchmarks 5 or 6 times and choose the most common result.